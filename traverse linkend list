
class Node:
    def __init__(self,data):
        self.data = data
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def append(self,data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node


    def traverse(self):
        current_node = self.head
        while current_node:
            print(current_node.data, end="")
            current_node = current_node.next
        print()


    def travers_list(self, data):
        if not self.head: # if the list is empty
            new_node = Node(data)
            self.head = new_node
            return
        current_node = self.head
        if current_node.next is None: #if there is only node
            print("The list contains only one element")
            return
        while current_node:
            print(current_node.data, end="")
            current_node = current_node.next
        print()



